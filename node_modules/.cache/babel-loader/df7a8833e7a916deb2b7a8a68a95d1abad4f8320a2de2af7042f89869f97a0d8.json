{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: [],\n  currentPost: null,\n  userPosts: [],\n  searchResults: [],\n  loading: false,\n  error: null,\n  searchQuery: '',\n  filterTag: ''\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n    setCurrentPost: (state, action) => {\n      state.currentPost = action.payload;\n    },\n    setUserPosts: (state, action) => {\n      state.userPosts = action.payload;\n    },\n    addPost: (state, action) => {\n      state.posts.unshift(action.payload);\n      state.userPosts.unshift(action.payload);\n    },\n    updatePost: (state, action) => {\n      const index = state.posts.findIndex(post => post.id === action.payload.id);\n      if (index !== -1) {\n        state.posts[index] = action.payload;\n      }\n      const userIndex = state.userPosts.findIndex(post => post.id === action.payload.id);\n      if (userIndex !== -1) {\n        state.userPosts[userIndex] = action.payload;\n      }\n      if (state.currentPost && state.currentPost.id === action.payload.id) {\n        state.currentPost = action.payload;\n      }\n    },\n    deletePost: (state, action) => {\n      state.posts = state.posts.filter(post => post.id !== action.payload);\n      state.userPosts = state.userPosts.filter(post => post.id !== action.payload);\n      if (state.currentPost && state.currentPost.id === action.payload) {\n        state.currentPost = null;\n      }\n    },\n    toggleLike: (state, action) => {\n      const {\n        postId,\n        userId\n      } = action.payload;\n      const post = state.posts.find(p => p.id === postId);\n      if (post) {\n        const isLiked = post.likes.includes(userId);\n        if (isLiked) {\n          post.likes = post.likes.filter(id => id !== userId);\n        } else {\n          post.likes.push(userId);\n        }\n      }\n    },\n    toggleBookmark: (state, action) => {\n      const {\n        postId,\n        userId\n      } = action.payload;\n      const post = state.posts.find(p => p.id === postId);\n      if (post) {\n        const isBookmarked = post.bookmarks.includes(userId);\n        if (isBookmarked) {\n          post.bookmarks = post.bookmarks.filter(id => id !== userId);\n        } else {\n          post.bookmarks.push(userId);\n        }\n      }\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    },\n    setFilterTag: (state, action) => {\n      state.filterTag = action.payload;\n    },\n    setSearchResults: (state, action) => {\n      state.searchResults = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  setLoading,\n  setPosts,\n  setCurrentPost,\n  setUserPosts,\n  addPost,\n  updatePost,\n  deletePost,\n  toggleLike,\n  toggleBookmark,\n  setSearchQuery,\n  setFilterTag,\n  setSearchResults,\n  setError,\n  clearError\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","currentPost","userPosts","searchResults","loading","error","searchQuery","filterTag","postsSlice","name","reducers","setLoading","state","action","payload","setPosts","setCurrentPost","setUserPosts","addPost","unshift","updatePost","index","findIndex","post","id","userIndex","deletePost","filter","toggleLike","postId","userId","find","p","isLiked","likes","includes","push","toggleBookmark","isBookmarked","bookmarks","setSearchQuery","setFilterTag","setSearchResults","setError","clearError","actions","reducer"],"sources":["C:/Users/Suriyaprakash/OneDrive/Desktop/Blog/src/store/slices/postsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  currentPost: null,\r\n  userPosts: [],\r\n  searchResults: [],\r\n  loading: false,\r\n  error: null,\r\n  searchQuery: '',\r\n  filterTag: '',\r\n};\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setPosts: (state, action) => {\r\n      state.posts = action.payload;\r\n    },\r\n    setCurrentPost: (state, action) => {\r\n      state.currentPost = action.payload;\r\n    },\r\n    setUserPosts: (state, action) => {\r\n      state.userPosts = action.payload;\r\n    },\r\n    addPost: (state, action) => {\r\n      state.posts.unshift(action.payload);\r\n      state.userPosts.unshift(action.payload);\r\n    },\r\n    updatePost: (state, action) => {\r\n      const index = state.posts.findIndex(post => post.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.posts[index] = action.payload;\r\n      }\r\n      const userIndex = state.userPosts.findIndex(post => post.id === action.payload.id);\r\n      if (userIndex !== -1) {\r\n        state.userPosts[userIndex] = action.payload;\r\n      }\r\n      if (state.currentPost && state.currentPost.id === action.payload.id) {\r\n        state.currentPost = action.payload;\r\n      }\r\n    },\r\n    deletePost: (state, action) => {\r\n      state.posts = state.posts.filter(post => post.id !== action.payload);\r\n      state.userPosts = state.userPosts.filter(post => post.id !== action.payload);\r\n      if (state.currentPost && state.currentPost.id === action.payload) {\r\n        state.currentPost = null;\r\n      }\r\n    },\r\n    toggleLike: (state, action) => {\r\n      const { postId, userId } = action.payload;\r\n      const post = state.posts.find(p => p.id === postId);\r\n      if (post) {\r\n        const isLiked = post.likes.includes(userId);\r\n        if (isLiked) {\r\n          post.likes = post.likes.filter(id => id !== userId);\r\n        } else {\r\n          post.likes.push(userId);\r\n        }\r\n      }\r\n    },\r\n    toggleBookmark: (state, action) => {\r\n      const { postId, userId } = action.payload;\r\n      const post = state.posts.find(p => p.id === postId);\r\n      if (post) {\r\n        const isBookmarked = post.bookmarks.includes(userId);\r\n        if (isBookmarked) {\r\n          post.bookmarks = post.bookmarks.filter(id => id !== userId);\r\n        } else {\r\n          post.bookmarks.push(userId);\r\n        }\r\n      }\r\n    },\r\n    setSearchQuery: (state, action) => {\r\n      state.searchQuery = action.payload;\r\n    },\r\n    setFilterTag: (state, action) => {\r\n      state.filterTag = action.payload;\r\n    },\r\n    setSearchResults: (state, action) => {\r\n      state.searchResults = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setLoading,\r\n  setPosts,\r\n  setCurrentPost,\r\n  setUserPosts,\r\n  addPost,\r\n  updatePost,\r\n  deletePost,\r\n  toggleLike,\r\n  toggleBookmark,\r\n  setSearchQuery,\r\n  setFilterTag,\r\n  setSearchResults,\r\n  setError,\r\n  clearError,\r\n} = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}